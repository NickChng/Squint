<UserControl x:Class="SquintScript.Controls.ObjectiveControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SquintScript.Controls"
             xmlns:global="clr-namespace:SquintScript"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <global:TestConverter x:Key="TestConverter"/>
        <global:TypeToBooleanConverter x:Key="TypeToBooleanConverter"/>
        <global:VisibilityConverter x:Key="VisibilityConverter"/>
        <global:VisibilityInverseConverter x:Key="VisibilityInverseConverter"/>
        <global:TypeToStringConverter x:Key="TypeToStringConverter"/>
        <global:TypeToColorConverter x:Key="TypeToColorConverter"/>
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style x:Key="ObjectiveListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.DataContext>
        <local:Control_ViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="10,10,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0" Orientation="Vertical" Margin="0,5,0,5">
                <TextBlock Text="NTO Parameters:"  Foreground="Black" FontWeight="Black" HorizontalAlignment="Left" Margin="0,0,0,5" FontSize="13"/>
                <Border Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="0,3,10,5" HorizontalAlignment="Stretch"/>
            </StackPanel>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="0,10,0,10" Visibility="{Binding NoNTO, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Separator Grid.Column="0" HorizontalAlignment="Stretch" Margin="10,10,10,10"/>
                <TextBlock Grid.Column="1" Text="No NTO" FontSize="14" FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Separator Grid.Column="2" HorizontalAlignment="Stretch" Margin="10,10,10,10" />
            </Grid>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding NoNTO, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="Priority:" Foreground="Black" Margin="10,0,0,0"/>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding NTO.Priority}" Foreground="Black" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Distance from target [mm]:"  Foreground="Black" Margin="10,0,0,0" />
                <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding NTO.DistanceFromTargetBorderMM}" Foreground="Black" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="0" Grid.Row="3" Text="Start dose [%]:" Foreground="Black" Margin="10,0,0,0" />
                <TextBlock Grid.Column="1" Grid.Row="3" Text= "{Binding NTO.StartDosePercentage}" Foreground="Black" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="0" Grid.Row="4" Text="End dose [%]:"  Foreground="Black" Margin="10,0,0,0"/>
                <TextBlock Grid.Column="1" Grid.Row="4" Text= "{Binding NTO.EndDosePercentage}" Foreground="Black" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="0" Grid.Row="5" Text="Fall-Off [1/mm]:"  Foreground="Black" Margin="10,0,0,0"/>
                <TextBlock Grid.Column="1" Grid.Row="5" Text="{Binding NTO.FallOff}" Foreground="Black" HorizontalAlignment="Left"/>
            </Grid>
        </Grid>
        <StackPanel  Grid.Row="1" Orientation="Vertical">
            <TextBlock FontWeight="Bold" Text="Dose Volume Objectives:" FontSize="13" Margin="10,5,0,5"/>
            <Border Grid.Row="1" Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="10,3,10,5" HorizontalAlignment="Stretch"/>
        </StackPanel>
        <Grid Grid.Row="2" Grid.Column="1" Margin="15,10,3,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="215"/>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="155"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Structure Id" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left"/>
            <TextBlock Grid.Column="1" Text="Objective" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
            <TextBlock Grid.Column="2" Text="Priority" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
            <TextBlock Grid.Column="3" Text="Achieved" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
            <TextBlock Grid.Column="4" Text="Distance" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
        </Grid>
        <Grid Grid.Row="3" Margin="10,15,10,15" Visibility="{Binding NoObjectives, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Separator Grid.Column="0" HorizontalAlignment="Stretch" Margin="10,10,10,10"/>
            <TextBlock Grid.Column="1" Text="No objectives" FontSize="14" FontStyle="Italic" HorizontalAlignment="Center" />
            <Separator Grid.Column="2" HorizontalAlignment="Stretch" Margin="10,10,10,10" />
        </Grid>
        
        <ListView Grid.Row="3" Margin ="10,5,0,0" ItemsSource="{Binding Objectives, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ObjectiveListViewStyle}" HorizontalContentAlignment="Stretch" BorderThickness="0" AlternationCount="2" Visibility="{Binding NoObjectives, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <!-- Trun off default selection-->
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid>
                                    <!--<Border x:Name="Bd" BorderBrush="LightSteelBlue" BorderThickness="1" Margin="2,2,2,2" CornerRadius="5,5,5,5" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"/>-->
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=(ItemsControl.AlternationIndex), UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TestConverter}}" Value="0">
                                                    <Setter Property="Background" Value="AliceBlue"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=(ItemsControl.AlternationIndex), UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TestConverter}}" Value="1">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <ContentPresenter Name="CP" Margin="8,8,8,8" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding StructureId}" VerticalAlignment="Center"/>
                        <ListView Grid.Column="1" ItemsSource="{Binding ObjectiveDefinitions}" BorderThickness="0" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="Transparent">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Focusable" Value="False"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,5,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="180"/>
                                            <ColumnDefinition Width="150"/>
                                            <ColumnDefinition Width="150"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                                            <Image RenderOptions.BitmapScalingMode="HighQuality" Height="18" Width="20">
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Setter Property="Source" Value="/Resources/upper_constraint.png"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Type, Mode=OneWay, Converter={StaticResource TypeToBooleanConverter}}" Value="True">
                                                                <Setter Property="Source" Value="/Resources/lower_constraint.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <TextBlock Text="{Binding Definition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center" Margin="5,0,0,0" IsHitTestVisible="False"/>
                                        </StackPanel>
                                        <Border Grid.Column="1" Width="{Binding PriorityWidth, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  IsHitTestVisible="False" HorizontalAlignment="Left" Background="LightSalmon" Margin ="40,0,0,0" CornerRadius="3,3,3,3">
                                            <TextBlock Text="{Binding Priority, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Foreground="White" TextAlignment="Center"/>
                                        </Border>
                                        <StackPanel Grid.Column="2" Orientation="Horizontal" IsHitTestVisible="False">
                                            <TextBlock  Text="{Binding ResultString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" />
                                        </StackPanel>
                                        <StackPanel Grid.Column="3" Orientation="Horizontal" IsHitTestVisible="False">
                                            <TextBlock Text="{Binding DoseDifferenceString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0"/>
                                            <TextBlock Text="{Binding VolDifferenceString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Grid.Column="4" HorizontalAlignment="Right">
                                            <TextBlock Text="{Binding WarningText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Padding="0,0,10,0" VerticalAlignment="Center" Foreground="Tomato" />
                                            <local:CircleCheck  Pass="{Binding isInactive, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CheckHeight="20" CheckWidth="20"/>
                                        </StackPanel>
                                        <!--<Grid Grid.Column="4" Visibility="{Binding isInactive, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" IsHitTestVisible="True" HorizontalAlignment="Right" Margin="0,-2,0,0">
                                            <Polygon Points="0,17 8,0 17,17" Fill="Transparent"  Grid.Column="1" Width="17" Height="17" Stroke="DarkOrange" StrokeThickness="2" ToolTip="Potential room for improvement" Margin="0,-2,0,0"/>
                                            
                                        </Grid>-->
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</UserControl>
