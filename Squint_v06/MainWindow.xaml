<Window x:Class="SquintScript.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SquintScript"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        xmlns:dd="urn:gong-wpf-dragdrop"
        WindowStartupLocation="CenterScreen"
        xmlns:controls="clr-namespace:System.Windows.Controls"
        xmlns:SC ="clr-namespace:SquintScript.Controls"
        x:Name="SquintWindow"
        Icon="/Resources/squint_icon.ico"
        Title="Squint v0.6" Height="900" Width="1450" Closing="OnClosing" MinWidth="1250">
    <Window.DataContext>
        <local:Presenter/>
    </Window.DataContext>
    <Window.Resources>
    </Window.Resources>
    <Grid Width="Auto" Margin="5,5,5,5">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="300"></RowDefinition>
            <RowDefinition Height="67*"></RowDefinition>
            <RowDefinition Height="288*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="570"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="CornflowerBlue" CornerRadius="5,5,5,5" Margin="5,5,0,5">
                    <TextBlock Text="Protocol" Foreground="White" FontSize="20" FontFamily="Arial"  FontWeight="Bold" VerticalAlignment="Center" Margin="10,0,0,0" Padding="0,3,0,0"></TextBlock>
                </Border>
            </Grid>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch">
            <ContentPresenter ContentTemplate="{StaticResource AssessmentHeader}"/>
        </Grid>
        <Grid Panel.ZIndex="2" Grid.Row="0" Grid.Column="2" SnapsToDevicePixels="True" Grid.RowSpan="4">
            <Grid Margin="5,5,0,5" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Vertical" VerticalAlignment="Top">
                    <Button Style="{StaticResource ButtonStyle}" ToolTip="Open/close patient" Command="{Binding ChangeVisibilityCommand}" Margin="0,0,0,10">
                        <Image Source="/Resources/user.png" Stretch="Fill" Margin="0,0,0,0"></Image>
                    </Button>
                    <Button Style="{StaticResource ButtonStyle}" ToolTip="Synchronize assessments with Eclipse" VerticalAlignment="Bottom" Command="{Binding SyncrhonizePatientCommand}" Margin="0,0,0,10">
                        <Image Source="/Resources/refreshPatient.png" Stretch="Fill" Margin="0,0,0,0"></Image>
                    </Button>
                    <Button Style="{StaticResource ButtonStyle}" Command="{Binding FontSizeIncreaseCommand}" ToolTip="Increase font size" CommandParameter="{Binding ElementName=SquintWindow, Path=DataContext.Protocol.AssessmentPresenter}" Margin="0,0,0,10">
                        <Image Source="/Resources/appbar.text.size.plus.png" Stretch="Fill" Margin="0,0,0,0" Height="36" VerticalAlignment="Bottom"></Image>
                    </Button>
                    <Button Style="{StaticResource ButtonStyle}" Command="{Binding FontSizeDecreaseCommand}" ToolTip="Decrease font size" CommandParameter="{Binding ElementName=SquintWindow, Path=DataContext.Protocol.AssessmentPresenter}" Margin="0,0,0,10">
                        <Image Source="/Resources/appbar.text.size.minus.png" Stretch="Fill" Margin="0,0,0,0" Height="36" VerticalAlignment="Bottom"></Image>
                    </Button>
                    <Button Name="SaveSessionButton" Style="{StaticResource ButtonStyle}" Command="{Binding SaveWorkspaceCommand}" ToolTip="Save patient workspace" CommandParameter="{Binding ElementName=SquintWindow, Path=DataContext.Protocol.AssessmentPresenter}" Margin="0,0,0,10">
                        <Image Source="/Resources/save_fontawesome.png" Stretch="Fill" Margin="0,0,0,0" Height="36" VerticalAlignment="Bottom"></Image>
                    </Button>
                    <Button Name="OpenSessionsButton" Style="{StaticResource ButtonStyle}" Command="{Binding LoadWorkspaceCommand}" ToolTip="Load patient workspace" Padding="0,0,0,0" CommandParameter="{Binding ElementName=SquintWindow, Path=DataContext.Protocol.AssessmentPresenter}" Margin="0,0,0,10">
                        <Image Source="/Resources/folder-open.png" Stretch="Fill" Margin="0,0,0,0" Height="36" VerticalAlignment="Bottom"></Image>
                    </Button>
                    <Popup Name="LoadSessionsPopup" PlacementTarget="{Binding ElementName=OpenSessionsButton}" Placement="Left" StaysOpen="False" AllowsTransparency="True" PopupAnimation="Fade"  IsOpen="{Binding SessionSelectVisibility, UpdateSourceTrigger=PropertyChanged}" >
                        <SC:HorizontalPopup DataContext="{Binding ElementName=SquintWindow}" MinHeight="35" Height="Auto"/>
                    </Popup>
                    <Popup Name="SaveSessionsPopup" PlacementTarget="{Binding ElementName=SaveSessionButton}" Placement="Left" StaysOpen="False" AllowsTransparency="True" PopupAnimation="Fade"  IsOpen="{Binding SessionSaveVisibility, UpdateSourceTrigger=PropertyChanged}" >
                        <SC:SavePopup DataContext="{Binding ElementName=SquintWindow}" MinHeight="35" Height="Auto"/>
                    </Popup>
                    <!--<SC:SessionsPopupButton/>-->
                </StackPanel>
                <Grid Grid.Row="1"  VerticalAlignment="Bottom">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Button Style="{StaticResource ButtonStyle}" ToolTip="Show/hide additional settings"
                                Margin="0,0,0,10" Command="{Binding LaunchAdminViewCommand, UpdateSourceTrigger=PropertyChanged}">
                            <Image Source="/Resources/settings.png" Stretch="Fill" Margin="0,0,0,0" Height="36" VerticalAlignment="Bottom"></Image>
                        </Button>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Grid Background="Transparent" Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" Height="Auto">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Row="0" Focusable="true" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" Template="{DynamicResource ScrollViewerControlTemplate1}" CanContentScroll="True" Background="Transparent">
                <Grid Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Name="AssessmentGrid" Grid.Row="0" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Background="PapayaWhip" CornerRadius="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,5,5,5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Manage Assessments" VerticalAlignment="Center" Margin="10,10,10,10" FontSize="13" FontWeight="Bold"/>
                                    <Button Grid.Column="1" Style="{StaticResource ButtonStyle_Small}" Command="{Binding Protocol.AssessmentPresenter.ChangeLinkVisibilityCommand}" HorizontalAlignment="Right" Margin="0,0,10,0">
                                        <Image>
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=isLinkProtocolVisible, UpdateSourceTrigger=PropertyChanged, FallbackValue=False}" Value="true">
                                                            <Setter Property="Source" Value="/Resources/section_collapse.png"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=isLinkProtocolVisible, UpdateSourceTrigger=PropertyChanged, FallbackValue=False}" Value="false">
                                                            <Setter Property="Source" Value="/Resources/section_expand.png"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Button>
                                </Grid>
                            </Border>
                            <Button Grid.Column="1" Name="button_AddAssessment" DockPanel.Dock="Right" ToolTip="Add new assessment"
                                    Style="{StaticResource ButtonStyle_Medium}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5,0,5,0" 
                                         Command="{Binding Protocol.AssessmentPresenter.AddAssessmentCommand}" CommandParameter="{Binding ElementName=listbox_ProtocolList, Path=SelectedValue}">
                                <Image Source="/Resources/plus.png"></Image>
                            </Button>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.Tag>
                                <sys:Double>0.0</sys:Double>
                            </Grid.Tag>
                            <Grid.MaxHeight>
                                <MultiBinding Converter="{StaticResource ExpanderConverter}" ConverterParameter="200">
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="DataContext.Protocol.AssessmentPresenter.AssessmentCounter" ElementName="SquintWindow"/>
                                </MultiBinding>
                            </Grid.MaxHeight>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding isLinkProtocolVisible, UpdateSourceTrigger=PropertyChanged}" Value="True" >
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource ExpandPanel}"/>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource CollapsePanel}"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <ListView HorizontalAlignment="Stretch" Name="listView_AssessmentList" ItemsSource="{Binding Protocol.AssessmentPresenter.Assessments, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,5,0" BorderThickness="0" VerticalAlignment="Stretch" ItemContainerStyle="{DynamicResource ListViewItemStyle}"
                                          HorizontalContentAlignment="Stretch" SelectedItem ="{Binding SelectedAssessment, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource ListViewStyle1}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0" Height="Auto" >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding AssessmentName, UpdateSourceTrigger=PropertyChanged}" FontSize="13" Background="Transparent" Margin="10,0,0,0"></TextBlock>
                                                <!--<SC:CircleCheck Grid.Column="1" HorizontalAlignment="Left" Margin="5,0,0,0" CheckHeight="20" CheckWidth="20" Pass="{Binding Warning, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>-->
                                                <Grid Grid.Column="1" Visibility="{Binding Warning, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment=" Left" Margin="10,0,0,0">
                                                    <Polygon Points="0,17 8,0 17,17" Fill="Transparent"  Grid.Column="1" Width="17" Height="17" Stroke="DarkOrange" StrokeThickness="2" Margin="0,-2,0,0"/>
                                                    <TextBlock Grid.Column="1" IsHitTestVisible="false" Text="!" FontWeight="Bold" HorizontalAlignment="Center" Padding="0,1,0,0" VerticalAlignment="Center" Foreground="Black"/>
                                                </Grid>
                                                <Button Grid.Column="2" Name="button_ShowAssessment" ToolTip="Pin assessment details"
                                                            Style="{DynamicResource ButtonStyle_Small}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,5,5,5" 
                                                            Command="{Binding DataContext.ShowAssessmentCommand, ElementName=SquintWindow}" CommandParameter="{Binding}">
                                                    <Image>
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=Pinned, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                                                        <Setter Property="Source" Value="/Resources/pin.png"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=Pinned, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                                        <Setter Property="Source" Value="/Resources/pin_remove.png"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Button>
                                                <Button Grid.Column="3" Margin="0,0,0,0" Background="Transparent"  ToolTip="Delete assessment"
                                                            Style="{StaticResource ButtonStyle_Small}" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                            Command="{Binding DataContext.DeleteAssessmentCommand, ElementName=SquintWindow}" CommandParameter="{Binding}">
                                                    <ContentControl>
                                                        <Image Source="/Resources/x.png"></Image>
                                                    </ContentControl>
                                                </Button>
                                            </Grid>
                                            <Grid Grid.Row="1">
                                                <Grid.Tag>
                                                    <sys:Double>0.0</sys:Double>
                                                </Grid.Tag>
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource SelectionConverter}" UpdateSourceTrigger="PropertyChanged">
                                                                        <Binding RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=ListViewItem}" UpdateSourceTrigger="PropertyChanged" Path="IsSelected" />
                                                                        <Binding RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=ListViewItem}" UpdateSourceTrigger="PropertyChanged" Path="DataContext.Pinned" />
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource ExpandPanel}"/>
                                                                </DataTrigger.EnterActions>
                                                                <DataTrigger.ExitActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource CollapsePanel}"/>
                                                                </DataTrigger.ExitActions>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <Grid.MaxHeight>
                                                    <MultiBinding Converter="{StaticResource ExpanderConverter}" UpdateSourceTrigger="PropertyChanged" ConverterParameter="120">
                                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                                        <Binding RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=ListViewItem}" UpdateSourceTrigger="PropertyChanged" Path="DataContext.ComponentCount" />
                                                    </MultiBinding>
                                                </Grid.MaxHeight>
                                                <ListView  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Name="listView_AssessmentComponentList" ItemContainerStyle="{DynamicResource ListViewItemStyle2}" 
                                                              BorderThickness ="0" ItemsSource="{Binding ACVs}">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition></RowDefinition>
                                                                    <RowDefinition></RowDefinition>
                                                                    <RowDefinition></RowDefinition>
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition></ColumnDefinition>
                                                                    <ColumnDefinition></ColumnDefinition>
                                                                    <ColumnDefinition></ColumnDefinition>
                                                                    <ColumnDefinition></ColumnDefinition>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" Grid.RowSpan="2" Grid.Row="0" VerticalAlignment="Center"  MinWidth="80" FontSize="13" Padding="0,10,0,0" Text="{Binding ComponentName, StringFormat=' {0}:'}"/>
                                                                <TextBlock Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="80" Text="Select Course:"/>
                                                                <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="80" Text="Select Plan/Sum:"/>
                                                                <ComboBox Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource ConstraintComboBoxStyle}" MinWidth="100" 
                                                                          IsEnabled="{Binding EnableCourseSelection, UpdateSourceTrigger=PropertyChanged}"
                                                                          SelectedItem="{Binding SelectedCourse, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" DisplayMemberPath="CourseId" ItemsSource="{Binding Courses, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                                                <ComboBox Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource ConstraintComboBoxStyle}" 
                                                                           IsEnabled="{Binding EnableCourseSelection, UpdateSourceTrigger=PropertyChanged}"
                                                                          MinWidth="100" SelectedItem="{Binding SelectedPlan, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" DisplayMemberPath="PlanId" ItemsSource="{Binding Plans, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                                                                <Button Grid.Column="3" Grid.Row="1" Margin="0,0,0,0" Background="Transparent"  ToolTip="Check plan" Style="{StaticResource ButtonStyle_Medium}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                                     Command="{Binding DataContext.ViewPlanCheckCommand, ElementName=SquintWindow}" CommandParameter="{Binding SelectedPlan}">
                                                                    <ContentControl>
                                                                        <Image Source="/Resources/check_plan.png"></Image>
                                                                    </ContentControl>
                                                                </Button>
                                                                <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Foreground="DarkOrange" HorizontalAlignment="Center" 
                                                                           Visibility="{Binding Warning, Converter={StaticResource VisibilityConverter}}" Text="{Binding WarningString}"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </Grid>
                    </Grid>
                    <Grid Name="ProtocolGrid" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="PapayaWhip" CornerRadius="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,5,5,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Load Protocol" VerticalAlignment="Center" FontSize="13" Margin="10,10,0,10" FontWeight="Bold"/>
                                <Button Grid.Column="1" Style="{StaticResource ButtonStyle_Small}" Command="{Binding ExpandLoadProtocolCommand}" HorizontalAlignment="Right" Margin="0,0,10,0">
                                    <Image>
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=isLoadProtocolPanelVisible, UpdateSourceTrigger=PropertyChanged, FallbackValue=True}" Value="false">
                                                        <Setter Property="Source" Value="/Resources/section_expand.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=isLoadProtocolPanelVisible, UpdateSourceTrigger=PropertyChanged, FallbackValue=True}" Value="true">
                                                        <Setter Property="Source" Value="/Resources/section_collapse.png"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>
                            </Grid>
                        </Border>
                        <Grid Name="LoadProtocolGrid" Grid.Row="1" Margin="0,5,0,0">
                            <Grid.Tag>
                                <sys:Double>0.0</sys:Double>
                            </Grid.Tag>
                            <Grid.MaxHeight>
                                <MultiBinding Converter="{StaticResource ExpanderConverter}" ConverterParameter="400">
                                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Grid.MaxHeight>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding isLoadProtocolPanelVisible, UpdateSourceTrigger=PropertyChanged, FallbackValue=True}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource ExpandPanel}"/>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource CollapsePanel}"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <!--<RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>-->
                            </Grid.RowDefinitions>
                            <!--<ContentControl Grid.Row="0" DataContext="{Binding DataContext.CentreComboBox, ElementName=SquintWindow}" Template="{StaticResource ComboWithHeader}"/>
                            <ContentControl Grid.Row="1" DataContext="{Binding DataContext.SiteComboBox, ElementName=SquintWindow}" Template="{StaticResource ComboWithHeader}"/>-->
                            <GroupBox Grid.Row="0" Header="Available Protocols" Margin="10,0,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ListBox Grid.Column="0" Name="listbox_ProtocolList" ItemsSource="{Binding Protocol.Protocols,  UpdateSourceTrigger=PropertyChanged}" Margin="5,5,5,5" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{DynamicResource ListBoxStyle1}"
                                                 DisplayMemberPath="ProtocolName" SelectedItem="{Binding Protocol.SelectedProtocol, Mode=TwoWay}" ItemContainerStyle="{DynamicResource SquintProtocolListBoxItemStyle}" Background="White">
                                    </ListBox>
                                    <Button Grid.Column="1" Name="button_OpenProtocol" ToolTip="Load selected protocol" Style="{StaticResource ButtonStyle_Medium}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="5,5,5,5" 
                                           Command="{Binding Protocol.LoadSelectedProtocolCommand}" CommandParameter="{Binding Protocol.SelectedProtocol}">
                                        <Image Source="/Resources/check.png"></Image>
                                    </Button>
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </Grid>
                    <Grid Name="CurrentProtocolGrid" Grid.Row="2" Height="Auto" Margin="0,0,0,10" VerticalAlignment="Top" Visibility="{Binding Protocol.isProtocolLoaded, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Border Grid.Column="0" Background="PapayaWhip"  CornerRadius="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,5,5,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Text="Current Protocol" FontSize="13" VerticalAlignment="Center" Margin="10,10,0,10" FontWeight="Bold"/>
                                    <TextBlock Grid.Column="1" Text="{Binding Protocol.ProtocolName, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Left" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="SteelBlue" FontSize ="13" Margin="10,5,20,5" Padding="10,0,0,0" FontWeight="Bold">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <!--<DataTrigger Binding="{Binding isPIDVisible}" Value="False">
                                                <Setter Property="Height" Value="0"></Setter>
                                            </DataTrigger>-->
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>

                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Background="PeachPuff" MinHeight="30" CornerRadius="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,5,5,5">
                                    <TextBlock Text="Components" VerticalAlignment="Center" Margin="10,0,0,0" FontWeight="Bold">
                                    </TextBlock>
                                </Border>
                                <Button Grid.Column="1" Style="{DynamicResource ButtonStyle_Small}">
                                    <Image Source="/Resources/plus.png"></Image>
                                </Button>
                            </Grid>
                            <ListView Grid.Row="1" Name="ComponentList" Style="{StaticResource ListViewStyle_NoScroll}" ItemsSource="{Binding Protocol.Components, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" BorderThickness="0" ItemContainerStyle="{StaticResource ListViewItemStyle}" HorizontalContentAlignment="Stretch" >
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="{Binding ComponentName, UpdateSourceTrigger=PropertyChanged}" FontSize="13" Background="Transparent" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                                <TextBlock Grid.Column="1" Text="{Binding ComponentTDFDescription, UpdateSourceTrigger=PropertyChanged}" FontSize="13" Foreground="SteelBlue" Background="Transparent" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                                <Button Grid.Column="2" Name="button_ShowComponent" ToolTip="Pin component details"
                                                        Style="{DynamicResource ButtonStyle_Small}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0,5,0" 
                                                            Command="{Binding DataContext.ShowComponentCommand, ElementName=SquintWindow}" CommandParameter="{Binding}">
                                                    <Image>
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=Pinned, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                                                        <Setter Property="Source" Value="/Resources/pin.png"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=Pinned, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                                        <Setter Property="Source" Value="/Resources/pin_remove.png"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Button>
                                            </Grid>
                                            <Grid Grid.Row="1">
                                                <Grid.Tag>
                                                    <sys:Double>0.0</sys:Double>
                                                </Grid.Tag>
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource SelectionConverter}" UpdateSourceTrigger="PropertyChanged">
                                                                        <Binding RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=ListViewItem}" UpdateSourceTrigger="PropertyChanged" Path="IsSelected" />
                                                                        <Binding RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=ListViewItem}" UpdateSourceTrigger="PropertyChanged" Path="DataContext.Pinned" />
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource ExpandPanel}"/>
                                                                </DataTrigger.EnterActions>
                                                                <DataTrigger.ExitActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource CollapsePanel}"/>
                                                                </DataTrigger.ExitActions>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <Grid.MaxHeight>
                                                    <MultiBinding Converter="{StaticResource ExpanderConverter}" UpdateSourceTrigger="PropertyChanged" ConverterParameter="100">
                                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                                    </MultiBinding>
                                                </Grid.MaxHeight>
                                                <Grid Margin="10,0,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Label Grid.Column="0" Grid.Row="0"  Content="Type:" Padding="7,7,20,7"></Label>
                                                    <ComboBox Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" HorizontalContentAlignment="Center" Width="100" Margin="10,5,40,5" 
                                                                  SelectedItem="{Binding ComponentType}" Style="{StaticResource ConstraintComboBoxStyle}"
                                                                  ItemsSource="{Binding AvailableComponentTypes}">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Converter={StaticResource EnumDisplayTypesConverter}, ConverterParameter=ComponentType}"/>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    <Label Grid.Column="0" Grid.Row="1"  Content="Reference Dose (cGy):" Padding="7,7,20,7"></Label>
                                                    <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding ReferenceDose}" Margin="20,5,40,5" Width="100" HorizontalAlignment="Right" HorizontalContentAlignment="Center" Background="AliceBlue" local:TextBoxExtensions.UpdateSourceOnKey="Return"></TextBox>
                                                    <Label Grid.Column="0" Grid.Row="2"  Content="Fractions (#):" Padding="7,7,20,7"></Label>
                                                    <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding NumFractions}" Margin="60,5,40,5" Width="100" HorizontalAlignment="Right" HorizontalContentAlignment="Center" Background="AliceBlue" local:TextBoxExtensions.UpdateSourceOnKey="Return"></TextBox>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0"  Background="PeachPuff" MinHeight="30" CornerRadius="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,5,5,5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="Structures" VerticalAlignment="Center" Margin="10,0,0,0" FontWeight="Bold"/>
                                        <Button Grid.Column="1" Style="{StaticResource ButtonStyle_Small}" Command="{Binding ExpandStructuresCommand}" HorizontalAlignment="Right" Margin="0,0,10,0" Padding="10,10,10,10">
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=isStructurePanelVisible, UpdateSourceTrigger=PropertyChanged, FallbackValue=True}" Value="false">
                                                                <Setter Property="Source" Value="/Resources/section_expand_small.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=isStructurePanelVisible, UpdateSourceTrigger=PropertyChanged, FallbackValue=True}" Value="true">
                                                                <Setter Property="Source" Value="/Resources/section_collapse_small.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Button>
                                    </Grid>
                                </Border>
                                <Button Grid.Column="1" Style="{DynamicResource ButtonStyle_Small}" Command="{Binding ElementName=SquintWindow, Path=DataContext.AddStructureCommand}">
                                    <Image Source="/Resources/plus.png"></Image>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="3">
                                <Grid.Tag>
                                    <sys:Double>0.0</sys:Double>
                                </Grid.Tag>
                                <Grid.MaxHeight>
                                    <MultiBinding Converter="{StaticResource ExpanderConverter}" ConverterParameter="500">
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Grid.MaxHeight>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding isStructurePanelVisible, UpdateSourceTrigger=PropertyChanged, FallbackValue=True}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource ExpandPanel}"/>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource CollapsePanel}"/>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border DockPanel.Dock="Top" Grid.Column="0" Grid.Row="1" Background="AntiqueWhite" MinHeight="30" CornerRadius="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="15,5,10,5">
                                    <TextBlock Grid.Row="0" Text="Protocol Definition" VerticalAlignment="Center" Margin="10,0,0,0" FontWeight="Bold"/>
                                </Border>
                                <Border DockPanel.Dock="Top" Grid.Column="1" Grid.Row="1" Background="AntiqueWhite" MinHeight="30" CornerRadius="5,5,5,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,5,15,5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="Current structure set:" VerticalAlignment="Center" Margin="10,0,0,0" FontWeight="Bold"/>
                                        <ComboBox Grid.Column="1" Style="{StaticResource ConstraintComboBoxStyle}" ItemsSource="{Binding PatientPresenter.StructureSets}" SelectedItem="{Binding PatientPresenter.CurrentStructureSet, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  DisplayMemberPath="ComboBoxDisplay" Margin="5,3,10,3"/>
                                    </Grid>

                                </Border>
                                <ListView Grid.Row="2" Grid.ColumnSpan="2" Margin="0,0,10,0" Name="StructuresTree" Style="{StaticResource ListViewStyle1}" ItemsSource="{Binding Protocol.Structures, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" BorderThickness="0" ItemContainerStyle="{StaticResource ListViewItemStyle}" HorizontalContentAlignment="Stretch">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="1.5*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="{Binding ProtocolStructureName, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"  FontSize="13" Background="Transparent" Margin="10,3,0,0"></TextBlock>
                                                    <Grid Grid.Column="1" Margin="20,0,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Ellipse Grid.Column="0" Width="12" Height="12" Margin="10,0,10,0" Fill="{Binding StructureColor, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Color2Brush}}"/>
                                                        <TextBlock  Grid.Column="1" Text="{Binding Path=AssignedStructureId, Mode=OneWay}" HorizontalAlignment="Left" Foreground="SteelBlue" FontSize="13" Background="Transparent" ></TextBlock>
                                                        <Grid Grid.Column="2" HorizontalAlignment="Right" Visibility="{Binding LabelIsConsistent, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                                                            <Polygon Points="0,17 8,0 17,17" Fill="Transparent"  Grid.Column="1" Width="17" Height="17" Stroke="DarkOrange" StrokeThickness="2" ToolTip="{Binding LabelMismatchTooltip, UpdateSourceTrigger=PropertyChanged}" Margin="0,-2,0,0"/>
                                                            <TextBlock Grid.Column="1" IsHitTestVisible="false" Text="!" FontWeight="Bold" HorizontalAlignment="Center" Padding="0,1,0,0" VerticalAlignment="Center" Foreground="Black"/>
                                                        </Grid>

                                                    </Grid>
                                                </Grid>
                                                <Grid Grid.Row="1">
                                                    <Grid.Tag>
                                                        <sys:Double>0.0</sys:Double>
                                                    </Grid.Tag>
                                                    <Grid.MaxHeight>
                                                        <MultiBinding Converter="{StaticResource ExpanderConverter}" ConverterParameter="150">
                                                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                                        </MultiBinding>
                                                    </Grid.MaxHeight>
                                                    <Grid.Style>
                                                        <Style TargetType="Grid">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType=ListViewItem}, UpdateSourceTrigger=PropertyChanged, Path=IsSelected}" Value="True">
                                                                    <DataTrigger.EnterActions>
                                                                        <BeginStoryboard Storyboard="{StaticResource ExpandPanel}"/>
                                                                    </DataTrigger.EnterActions>
                                                                    <DataTrigger.ExitActions>
                                                                        <BeginStoryboard Storyboard="{StaticResource CollapsePanel}"/>
                                                                    </DataTrigger.ExitActions>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Grid.Style>
                                                    <GroupBox Header="Structure Properties" Margin="0,5,0,0" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Structure Name:" Margin="7,5,7,5" HorizontalAlignment="Left" Visibility="{Binding isUserAdded, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <TextBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" Width="150" MaxLength="30" Text="{Binding ProtocolStructureName, Mode=TwoWay}" KeyUp="TextBox_KeyEnterUpdate" Visibility="{Binding isUserAdded, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Structure Id:" Margin="7,5,7,5" HorizontalAlignment="Left"></TextBlock>
                                                            <ComboBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" MaxWidth="150" HorizontalContentAlignment="Center" Width="Auto" Margin="10,5,10,5" Style="{StaticResource ConstraintComboBoxStyle}"
                                                                  MaxDropDownHeight="150" 
                                                                  SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=DataContext.AssignedStructureId, Mode=OneWayToSource}"
                                                                      Background="AliceBlue">
                                                                <ComboBox.ItemsSource>
                                                                    <MultiBinding Converter="{StaticResource SortStructuresConverter}" Mode="OneWay">
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}" Path="DataContext"  Mode="OneWay"/>
                                                                        <Binding ElementName="SquintWindow" Path="DataContext.Protocol.AvailableStructureIds" UpdateSourceTrigger="PropertyChanged" Mode="OneWay"/>
                                                                    </MultiBinding>
                                                                </ComboBox.ItemsSource>
                                                            </ComboBox>
                                                            <Grid Grid.Row="2" Grid.ColumnSpan="2">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" Text="Structure Label:" HorizontalAlignment="Left" Margin="7,5,7,5"/>
                                                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                                                    <TextBlock  Text="{Binding DataContext.LabelName, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                                                       Margin="7,5,7,5" HorizontalAlignment="Center" Foreground="SteelBlue"/>
                                                                    <TextBlock  Text="{Binding DataContext.AlphaBetaRatio, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                                                       Margin="7,5,7,5" HorizontalAlignment="Left" Foreground="SteelBlue"/>
                                                                </StackPanel>
                                                                <Button Grid.Column="2" Style="{StaticResource ButtonStyle_Small}" HorizontalAlignment="Right" Margin="0,0,5,0">
                                                                    <Image Source="/Resources/edit.png"></Image>
                                                                </Button>
                                                            </Grid>

                                                        </Grid>
                                                    </GroupBox>
                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>
                            <Grid Grid.Row="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="5" Background="PeachPuff" CornerRadius="5,5,5,5" MinHeight="30" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,5,5,5">
                                    <TextBlock Text="Constraints" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0,0,0">
                                    </TextBlock>
                                </Border>
                                <Button Grid.Column="1" Style="{DynamicResource ButtonStyle_Small}" Command="{Binding ElementName=SquintWindow, Path=DataContext.AddConstraintCommand}" >
                                    <Image Source="/Resources/plus.png"></Image>
                                </Button>
                            </Grid>
                            <ListView Name="ConstraintListView" Grid.Row="5" Style="{StaticResource ListViewStyle_NoScroll}" ItemsSource="{Binding Protocol.Constraints, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding Protocol.SelectedIndex}" VerticalAlignment="Stretch" BorderThickness="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" ItemContainerStyle="{DynamicResource DraggableListViewItemStyle}"
                                      SelectedItem="{Binding Protocol.SelectedConstraint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" dd:DragDrop.IsDragSource="True" DragDrop.DragOver="ListView_DragOver" MouseUp="ConstraintListView_MouseUp" MouseLeave="ConstraintListView_MouseLeave" MouseEnter="ConstraintListView_MouseEnter">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Image Name ="DragImage"  Grid.Column="0" Height="20" Width="18" Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality" Source="\Resources\align.png" ToolTip="Drag to re-order" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,2,5,2" MouseDown="DragImage_MouseDown"/>
                                                <ComboBox Grid.Column="1" HorizontalAlignment="Stretch" Width="120" ItemsSource="{Binding ElementName=SquintWindow, Path=DataContext.Protocol.Structures}" DisplayMemberPath="ProtocolStructureName" Style="{StaticResource ConstraintComboBoxStyle}"
                                                                  MaxDropDownHeight="100" 
                                                                  VerticalAlignment="Center" 
                                                          SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListViewItem}}, Path=DataContext.SS, Converter={StaticResource GetConstraintStructureConverter}, Mode=TwoWay}"/>
                                                <!--<TextBlock  Grid.Column="2" VerticalAlignment="Center" Text="{Binding ShortConstraintDefinition, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="5,0,10,0"></TextBlock>-->
                                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding ShortConstraintDefinition, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="5,0,0,0"></TextBlock>
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding IsAddedStatus, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Foreground="ForestGreen" FontStyle="Italic" Margin="5,0,0,0"></TextBlock>
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding ChangeStatusString, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Foreground="DarkOrange" FontStyle="Italic" Margin="5,0,0,0"></TextBlock>
                                                </StackPanel>
                                                <ComboBox  Grid.Column="3" HorizontalAlignment="Right" MinWidth="50" Margin="0,0,0,0" VerticalAlignment="Center" ItemsSource="{Binding Components}" SelectedItem="{Binding Component}" Style="{StaticResource ConstraintComboBoxStyle}">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding ComponentName}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                                <Button Grid.Column="4" Name="ConstraintInfoButton" ToolTip="Constraint Information" Style="{DynamicResource ButtonStyle_Small}" Margin="5,5,0,5" 
                                                        Command="{Binding DataContext.GetConstraintInformationCommand, ElementName=SquintWindow}" CommandParameter="{Binding}">
                                                    <Image Source="/Resources/appbar.question.png"/>
                                                </Button>
                                                <Popup Name="ConstraintInfoPopup" PlacementTarget="{Binding ElementName=SquintWindow}" Placement="Center" StaysOpen="False" AllowsTransparency="True" PopupAnimation="Fade"  IsOpen="{Binding ConstraintInfoVisibility, UpdateSourceTrigger=PropertyChanged}" >
                                                    <SC:ConstraintInformation DataContext="{Binding}" MinHeight="35" Height="Auto"/>
                                                </Popup>
                                                <Button Grid.Column="5" ToolTip="Pin constraint details"
                                                            Style="{DynamicResource ButtonStyle_Small}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,5,5,5" 
                                                            Command="{Binding DataContext.PinConstraintCommand, ElementName=SquintWindow}" CommandParameter="{Binding}">
                                                    <Image>
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=Pinned, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                                                        <Setter Property="Source" Value="/Resources/pin.png"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=Pinned, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                                        <Setter Property="Source" Value="/Resources/pin_remove.png"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </Button>
                                            </Grid>
                                            <Grid Grid.Row="1">
                                                <Grid.Tag>
                                                    <sys:Double>0.0</sys:Double>
                                                </Grid.Tag>
                                                <Grid.MaxHeight>
                                                    <MultiBinding Converter="{StaticResource ExpanderConverter}" ConverterParameter="100">
                                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                                    </MultiBinding>
                                                </Grid.MaxHeight>
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource SelectionConverter}" UpdateSourceTrigger="PropertyChanged">
                                                                        <Binding RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=ListViewItem}" UpdateSourceTrigger="PropertyChanged" Path="IsSelected" />
                                                                        <Binding RelativeSource="{RelativeSource AncestorLevel=1, AncestorType=ListViewItem}" UpdateSourceTrigger="PropertyChanged" Path="DataContext.Pinned" />
                                                                        <Binding ElementName="SquintWindow" Path="DataContext.Protocol.DragSelected" />
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource ExpandPanel}"/>
                                                                </DataTrigger.EnterActions>
                                                                <DataTrigger.ExitActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource CollapsePanel}"/>
                                                                </DataTrigger.ExitActions>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <GroupBox Header="Edit Constraint" Background="Transparent">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        <StackPanel Grid.Row="0" Orientation="Horizontal" Background="Transparent">
                                                            <ComboBox ItemsSource ="{Binding Path=ConstraintTypes, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding ConstraintType}" Width="50" HorizontalAlignment="Left" Style="{StaticResource ConstraintComboBoxStyle}"></ComboBox>
                                                            <TextBox Text ="{Binding ConstraintValue, Mode=TwoWay}" Style="{StaticResource ConstraintTextBoxStyle}" Width="50" local:TextBoxExtensions.UpdateSourceOnKey="Return"
                                                                        Foreground="{Binding ConstraintValueColor, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <ComboBox ItemsSource ="{Binding Path=ConstraintUnitTypes, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding ConstraintUnit}" Width="50" HorizontalAlignment="Left" Style="{StaticResource ConstraintComboBoxStyle}">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Converter={StaticResource EnumDisplayTypesConverter}}"/>
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                            <ComboBox ItemsSource ="{Binding Path=AvailableReferenceTypes, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding ReferenceType}" Width="50" HorizontalAlignment="Left" Style="{StaticResource ConstraintComboBoxStyle}">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Converter={StaticResource EnumDisplayTypesConverter}}"/>
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                            <TextBox Text ="{Binding ReferenceValue, Mode=TwoWay}" Style="{StaticResource ConstraintTextBoxStyle}" Foreground="{Binding ReferenceValueColor, UpdateSourceTrigger=PropertyChanged}"
                                                                     Width="50" local:TextBoxExtensions.UpdateSourceOnKey="Return"></TextBox>
                                                            <ComboBox ItemsSource ="{Binding Path=AvailableReferenceUnitTypes, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding ReferenceUnit}" Width="50" HorizontalAlignment="Left" Style="{StaticResource ConstraintComboBoxStyle}">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Converter={StaticResource EnumDisplayTypesConverter}}"/>
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </StackPanel>
                                                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                            <Border CornerRadius="5,5,5,5" Margin ="5,0,0,0" Background="MediumSeaGreen" Height="25" Width="80">
                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                                    <TextBlock Text="{Binding ReferenceType, Mode=OneWay, Converter={StaticResource EnumDisplayTypesConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,2,0" Foreground="White" Background="Transparent" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                                                    <TextBox Text="{Binding StopValue, Converter={StaticResource DoubleToDisplay}, Mode=TwoWay}" Foreground="White" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" local:TextBoxExtensions.UpdateSourceOnKey="Return"/>
                                                                    <TextBlock Text="{Binding ReferenceUnit, Mode=OneWay, Converter={StaticResource EnumDisplayTypesConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="2,0,0,0" Foreground="White" Background="Transparent" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                            </Border>
                                                            <Border CornerRadius="5,5,5,5" Margin ="10,0,0,0" Background="PaleGreen" Height="25" Width="80">
                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                                    <TextBlock Text="{Binding ReferenceType, Mode=OneWay, Converter={StaticResource EnumDisplayTypesConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,2,0" Foreground="Black" Background="Transparent" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                                                    <TextBlock Text="{Binding ReferenceValue, Mode=TwoWay, Converter={StaticResource DoubleToDisplay}}" Background="Transparent" HorizontalAlignment="Center"  VerticalAlignment="Center" local:TextBoxExtensions.UpdateSourceOnKey="Return"/>
                                                                    <TextBlock Text="{Binding ReferenceUnit, Mode=OneWay, Converter={StaticResource EnumDisplayTypesConverter}, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" Margin="2,0,0,0" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                            </Border>
                                                            <Border CornerRadius="5,5,5,5" Margin ="10,0,0,0" Background="DarkOrange" Height="25" Width="80">
                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                                    <TextBlock Text="{Binding OppositeReferenceTypeString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,2,0" Foreground="Black" Background="Transparent" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                                                    <TextBox Text="{Binding MinorViolation, Converter={StaticResource DoubleToDisplay}, Mode=TwoWay}" Background="Transparent" HorizontalAlignment="Center" BorderBrush="Transparent" VerticalAlignment="Center" local:TextBoxExtensions.UpdateSourceOnKey="Return"/>
                                                                    <TextBlock Text="{Binding ReferenceUnit, Mode=OneWay, Converter={StaticResource EnumDisplayTypesConverter}, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" Margin="2,0,0,0" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                            </Border>
                                                            <Border CornerRadius="5,5,5,5"  Margin ="10,0,0,0" Background="Tomato" Height="25" Width="80">
                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                                    <TextBlock Text="{Binding OppositeReferenceTypeString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,2,0" Foreground="Black" Background="Transparent" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                                                    <TextBox Text="{Binding MajorViolation, Converter={StaticResource DoubleToDisplay}, Mode=TwoWay}" Background="Transparent" HorizontalAlignment="Center" BorderBrush="Transparent" VerticalAlignment="Center" local:TextBoxExtensions.UpdateSourceOnKey="Return"/>
                                                                    <TextBlock Text="{Binding ReferenceUnit, Mode=OneWay, Converter={StaticResource EnumDisplayTypesConverter}, UpdateSourceTrigger=PropertyChanged}" Background="Transparent"  Margin="2,0,0,0" HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                            </Border>
                                                        </StackPanel>
                                                    </Grid>
                                                </GroupBox>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                    </Grid>
                </Grid>
            </ScrollViewer>
            <Grid Grid.Row="1" Margin="0,10,0,10" Visibility="{Binding isLoading, Converter={StaticResource VisibilityConverter}}">
                <!--<Grid.Visibility>
                    <MultiBinding Converter="{StaticResource VisibilityMultiConverter}">
                        <Binding ElementName="SquintWindow" Path="DataContext.AssessmentPresenter.WaitingForUpdate" UpdateSourceTrigger="PropertyChanged" Mode="OneWay"/>
                        <Binding Path="isLoading" UpdateSourceTrigger="PropertyChanged" Mode="OneWay"/>
                    </MultiBinding>
                </Grid.Visibility>-->
                <SC:SquintProgressBar/>
            </Grid>
        </Grid>
        <DataGrid Name="dg" Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" BorderThickness="0" Background="White" Margin="15,5,5,5" RowHeaderStyle="{DynamicResource SquintRowHeaderStyle}" 
                  AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ColumnHeaderStyle="{DynamicResource SquintColumnHeaderStyle}" 
                      local:DataGridColumnsBehavior.BindableColumns="{Binding Protocol.AssessmentPresenter.AssessmentColumns}" RowHeaderWidth="{Binding ElementName=SquintWindow, Path=DataContext.Protocol.AssessmentPresenter.RowHeaderWidth, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding Protocol.Constraints, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" GridLinesVisibility="None" Style="{DynamicResource SquintDataGridStyle}"
                  Visibility="{Binding ProtocolCheckVisible, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
        </DataGrid>
        <Grid Grid.Row="1" Grid.RowSpan="3" Grid.Column="1" Margin="10,0,0,0" Visibility="{Binding PlanCheckVisible, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding PlanCheckVisible}">
            <SC:LoadingControl DataContext="{Binding DataContext, ElementName=SquintWindow}"
                               LoadingMessage="{Binding PlanCheckLoadingMessage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                Visibility="{Binding isPlanCheckCalculating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
            <Grid Visibility="{Binding isPlanCheckCalculating, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}">
                <SC:ChecklistControl DataContext="{Binding DataContext.ChecklistViewModel, ElementName=SquintWindow}" />
            </Grid>
        </Grid>
    </Grid>
</Window>
