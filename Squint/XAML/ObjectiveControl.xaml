<UserControl x:Class="SquintScript.Views.ObjectiveControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SquintScript.Views"
             xmlns:converters="clr-namespace:SquintScript.Converters"
             xmlns:vm="clr-namespace:SquintScript.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:TypeToBooleanConverter x:Key="TypeToBooleanConverter"/>
        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
        <converters:VisibilityInverseConverter x:Key="VisibilityInverseConverter"/>
        <converters:TypeToStringConverter x:Key="TypeToStringConverter"/>
        <converters:TypeToColorConverter x:Key="TypeToColorConverter"/>
        <Style x:Key="ObjectiveListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!--<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>-->
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <!--<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>-->
                <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{DynamicResource ScrollBarStyleHorizontal}" Margin="10,5,0,0"
                           AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>
        </ControlTemplate>
        <LinearGradientBrush x:Key="WarningBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="White" Offset="0"/>
            <!--<GradientStop Color="#EDEDED" Offset="0.20"/>
            <GradientStop Color="#EDEDED" Offset="0.80"/>-->
            <GradientStop Color="OrangeRed" Offset="1.5"/>
        </LinearGradientBrush>
    </UserControl.Resources>
    <UserControl.DataContext>
        <vm:OptimizationCheckViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="40"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,10,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0" Orientation="Vertical" Margin="0,5,0,5">
                <TextBlock Text="NTO Parameters:"  Foreground="Black" FontWeight="Black" HorizontalAlignment="Left" Margin="0,0,0,5" FontSize="13"/>
                <Border Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="0,3,10,5" HorizontalAlignment="Stretch"/>
            </StackPanel>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="0,10,0,10" Visibility="{Binding NoNTO, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Separator Grid.Column="0" HorizontalAlignment="Stretch" Margin="10,10,10,10"/>
                <TextBlock Grid.Column="1" Text="No NTO" FontSize="14" FontStyle="Italic" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Separator Grid.Column="2" HorizontalAlignment="Stretch" Margin="10,10,10,10" />
            </Grid>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding NoNTO, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="Priority:" Foreground="Black" Margin="10,0,0,0"/>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding NTO.Priority}" Foreground="Black" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Distance from target [mm]:"  Foreground="Black" Margin="10,0,0,0" />
                <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding NTO.DistanceFromTargetBorderMM}" Foreground="Black" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="0" Grid.Row="3" Text="Start dose [%]:" Foreground="Black" Margin="10,0,0,0" />
                <TextBlock Grid.Column="1" Grid.Row="3" Text= "{Binding NTO.StartDosePercentage}" Foreground="Black" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="0" Grid.Row="4" Text="End dose [%]:"  Foreground="Black" Margin="10,0,0,0"/>
                <TextBlock Grid.Column="1" Grid.Row="4" Text= "{Binding NTO.EndDosePercentage}" Foreground="Black" HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="0" Grid.Row="5" Text="Fall-Off [1/mm]:"  Foreground="Black" Margin="10,0,0,0"/>
                <TextBlock Grid.Column="1" Grid.Row="5" Text="{Binding NTO.FallOff}" Foreground="Black" HorizontalAlignment="Left"/>
            </Grid>
        </Grid>
        <StackPanel Grid.Column="0" Grid.Row="1"  Grid.ColumnSpan="2" Orientation="Vertical">
            <TextBlock FontWeight="Bold" Text="Dose Volume Objectives:" FontSize="13" Margin="10,5,0,5"/>
            <Border Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="10,3,10,5" HorizontalAlignment="Stretch"/>
        </StackPanel>
        <ScrollViewer Name="sv" Grid.Column="0" Grid.Row="2" Margin="15,10,3,0" Template="{StaticResource ScrollViewerControlTemplate}" Background="Transparent" HorizontalScrollBarVisibility="Auto">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="180"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Structure Id" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left"/>
                    <TextBlock Grid.Column="1" Text="Objective" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
                    <TextBlock Grid.Column="2" Text="Priority" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
                    <TextBlock Grid.Column="3" Text="Achieved" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
                    <TextBlock Grid.Column="4" Text="Distance" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
                    <TextBlock Grid.Column="5" Text="Result" FontWeight="Bold" FontSize="13" HorizontalAlignment="Left" Margin="0,0,0,0"/>
                </Grid>
                <Grid Grid.Row="1" Margin="10,15,10,15" Visibility="{Binding NoObjectives, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Separator Grid.Column="0" HorizontalAlignment="Stretch" Margin="10,10,10,10"/>
                    <TextBlock Grid.Column="1" Text="No objectives" FontSize="14" FontStyle="Italic" HorizontalAlignment="Center" />
                    <Separator Grid.Column="2" HorizontalAlignment="Stretch" Margin="10,10,10,10" />
                </Grid>
                <ListView Grid.Row="2" Margin ="0,5,0,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                  ItemsSource="{Binding Objectives, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ObjectiveListViewStyle}" HorizontalContentAlignment="Stretch" BorderThickness="0" AlternationCount="2" Visibility="{Binding NoObjectives, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <!-- Trun off default selection-->
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Grid>
                                            <!--<Border x:Name="Bd" BorderBrush="LightSteelBlue" BorderThickness="1" Margin="2,2,2,2" CornerRadius="5,5,5,5" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"/>-->
                                            <Grid.Style>
                                                <Style TargetType="Grid">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=(ItemsControl.AlternationIndex), UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TestConverter}}" Value="0">
                                                            <Setter Property="Background" Value="AliceBlue"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=(ItemsControl.AlternationIndex), UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TestConverter}}" Value="1">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>
                                            <ContentPresenter Name="CP" Margin="0,8,0,8" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding StructureId}" VerticalAlignment="Center"/>
                                <ListView Grid.Column="1" ItemsSource="{Binding ObjectiveDefinitions}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                  BorderThickness="0" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Background="Transparent">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Focusable" Value="False"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,5,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="180"/>
                                                    <ColumnDefinition Width="100"/>
                                                    <ColumnDefinition Width="150"/>
                                                    <ColumnDefinition Width="150"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Column="0" Orientation="Horizontal">
                                                    <Image RenderOptions.BitmapScalingMode="HighQuality" Height="18" Width="20">
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Setter Property="Source" Value="/Resources/upper_constraint.png"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Type, Mode=OneWay, Converter={StaticResource TypeToBooleanConverter}}" Value="True">
                                                                        <Setter Property="Source" Value="/Resources/lower_constraint.png"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                    <TextBlock Text="{Binding Definition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center" Margin="5,0,0,0" IsHitTestVisible="False"/>
                                                </StackPanel>
                                                <Border Grid.Column="1" Width="{Binding PriorityWidth, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  IsHitTestVisible="False" HorizontalAlignment="Left" Background="LightSalmon" Margin ="0,0,0,0" CornerRadius="3,3,3,3">
                                                    <TextBlock Text="{Binding Priority, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Foreground="White" TextAlignment="Center"/>
                                                </Border>
                                                <StackPanel Grid.Column="2" Orientation="Horizontal" IsHitTestVisible="False">
                                                    <TextBlock  Text="{Binding ResultString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" />
                                                </StackPanel>
                                                <StackPanel Grid.Column="3" Orientation="Horizontal" IsHitTestVisible="False">
                                                    <TextBlock Text="{Binding DoseDifferenceString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0"/>
                                                    <TextBlock Text="{Binding VolDifferenceString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Grid.Column="4" HorizontalAlignment="Left">
                                                    <local:CircleCheck  Pass="{Binding isInactive, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CheckHeight="20" CheckWidth="20" HorizontalAlignment="Left"/>
                                                    <TextBlock Text="{Binding WarningText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Padding="10,0,10,0" VerticalAlignment="Center" Foreground="Tomato" />
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </ScrollViewer>
        <Rectangle Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Opacity="0.5" Fill="{DynamicResource WarningBackground}" Width="Auto" Visibility="{Binding ComputedHorizontalScrollBarVisibility, ElementName=sv}" Margin="0,30,5,20">
            <Rectangle.Effect>
                <BlurEffect Radius="5"/>
            </Rectangle.Effect>
        </Rectangle>
    </Grid>
</UserControl>
