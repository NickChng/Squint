<UserControl x:Class="Squint.Views.ChecklistControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Squint.Views"
             mc:Ignorable="d" 
             d:DesignHeight="2000" d:DesignWidth="800">
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeHeaderConverter}, UpdateSourceTrigger=PropertyChanged, ConverterParameter=LightSteelBlue}" Margin="0,0,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="Plan Checklist" FontSize="18" FontWeight="Bold" Foreground="White" Margin="5,5,5,5" VerticalAlignment="Center" ></TextBlock>
                <Button Grid.Column="3" ToolTip="Reject changes"  Padding="5,5,5,5" Style="{DynamicResource ButtonStyle_Small}" HorizontalAlignment="Right" VerticalAlignment="Center"
                            Background="{Binding amEditing, Converter={StaticResource EditModeIconConverter}}" 
                        Margin="0,0,5,0"
                        Visibility="{Binding ParentView.ParentView.AdminOptionsToggle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"
                        Command="{Binding RejectEditsCommand}">
                    <ContentControl>
                        <Image Source="/Resources/undo.png"></Image>
                    </ContentControl>
                </Button>
                <Button Grid.Column="4" ToolTip="Close checklist" Style="{DynamicResource ButtonStyle_Small}" HorizontalAlignment="Right" VerticalAlignment="Center" Background="Transparent" Margin="0,0,5,0"
                        Command="{Binding DataContext.CloseCheckListCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                    <ContentControl>
                        <Image Source="/Resources/section_collapse.png"></Image>
                    </ContentControl>
                </Button>
            </Grid>
        </Border>
        <ScrollViewer Grid.Row="1" Template="{DynamicResource ScrollViewerControlTemplate1}" CanContentScroll="True" Background="Transparent" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
            <Grid Grid.Row="1" Background="White" Margin="5,5,5,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Border  Grid.Column="0" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeHeaderConverter}, ConverterParameter=LightSkyBlue, UpdateSourceTrigger=PropertyChanged}" Margin="0,5,0,0" >
                            <TextBlock Grid.Column="0" Text="Protocol Checks" Foreground="White" FontSize="15" FontWeight="Bold" Margin="10,7,5,7"/>
                    </Border>
                </Grid>
                <Border Grid.Row="1" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle,  Converter={StaticResource AdminColorModeConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,10,0,0">
                    <TextBlock Text="Patient" Foreground="White" FontSize="14" Margin="10,5,5,5"/>
                </Border>
                <StackPanel Grid.Row="2" Orientation="Vertical">
                    <TextBlock Grid.Column="0" FontWeight="Bold" Text="Diagnosis and Intent" FontSize="13" Margin="5,5,0,5"/>
                    <Border  Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="5,3,10,5" HorizontalAlignment="Stretch"/>
                    <local:TestView DataContext="{Binding DiagnosisIntent_ViewModel}"  TestItems ="{Binding Tests}" SetReferenceHeader="Reference Value" />
                </StackPanel>
                <Border Grid.Row="3" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle,  Converter={StaticResource AdminColorModeConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,0">
                    <TextBlock Text="Simulation" Foreground="White" FontSize="14" Margin="10,5,5,5"/>
                </Border>
                <StackPanel Grid.Row="4" Orientation="Vertical" >
                    <TextBlock Grid.Column="0" FontWeight="Bold" Text="CT Details" FontSize="13" Margin="5,5,0,5"/>
                    <Border  Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="5,3,10,5" HorizontalAlignment="Stretch"/>
                    <local:TestView DataContext="{Binding Simulation_ViewModel}" TestItems="{Binding Tests}" SetReferenceHeader="Reference Value"/>
                </StackPanel>
                <Border Grid.Row="5" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,10">
                    <TextBlock Text="Calculation" Foreground="White" FontSize="14" Margin="10,5,5,5"/>
                </Border>
                <StackPanel Grid.Row="6" Orientation="Vertical">
                    <TextBlock Grid.Column="0" FontWeight="Bold" Text="Calculation Details" FontSize="13" Margin="5,5,0,5"/>
                    <Border  Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="5,3,10,5" HorizontalAlignment="Stretch"/>
                    <local:TestView DataContext="{Binding Calculation_ViewModel}"  TestItems ="{Binding Tests}" SetReferenceHeader="Reference Value" />
                </StackPanel>
                <Grid Grid.Row="7">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,10">
                            <TextBlock Text="Structure checks" Foreground="White" FontSize="14" Margin="10,5,5,5"/>
                        </Border>
                        <Button x:Name="EditContourChecks" Grid.Column="1" Style="{DynamicResource ButtonStyle_Medium}" Margin="0,3,0,0" 
                                Command="{Binding AddNewContourCheckCommand}">
                            <Image Source="/Resources/edit.png"></Image>
                        </Button>
                        <Popup PlacementTarget="{Binding ElementName=EditContourChecks}" Placement="Left"  StaysOpen="False" 
                               AllowsTransparency="True" PopupAnimation="Fade"  IsOpen="{Binding AddStructureCheckVisibility, UpdateSourceTrigger=PropertyChanged}" >
                            <local:AddStructureCheckPopup DataContext="{Binding}"/>
                        </Popup>
                    </Grid>
                    <StackPanel Grid.Row="1" Orientation="Vertical">
                        <TextBlock Grid.Column="0" FontWeight="Bold" Text="Small subvolume checks" FontSize="13" Margin="5,5,0,5"/>
                        <Border  Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="5,3,10,5" HorizontalAlignment="Stretch"/>
                        <local:PointCheckView DataContext="{Binding PointCheck_VM}"/>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Orientation="Vertical">
                        <TextBlock Grid.Column="0" FontWeight="Bold" Text="Density Overrides (excludes support structures)" FontSize="13" Margin="5,20,0,5"/>
                        <Border Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="5,3,10,5" HorizontalAlignment="Stretch"/>
                        <local:DensityOverrides DataContext="{Binding StructuresWithDensityOverride, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Grid.Row="3" Orientation="Vertical">
                        <TextBlock Grid.Column="0" FontWeight="Bold" Text="Contour Resolution" FontSize="13" Margin="5,20,0,5"/>
                        <Border Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="5,3,10,5" HorizontalAlignment="Stretch"/>
                        <local:HighResolutionView DataContext="{Binding StructuresWithHighResolutionContours, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </Grid>
             
                <Border Grid.Row="8" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,10,0,0" Visibility="{Binding ParentView.ParentView.AdminOptionsToggle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}">
                    <TextBlock Text="Optimization" Foreground="White" FontSize="14" Margin="10,5,5,5"/>
                </Border>
                <StackPanel Grid.Row="9" Orientation="Vertical" Visibility="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource VisibilityInverseConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <local:ObjectiveControl  DataContext="{Binding Objectives_ViewModel}" Background="Transparent" />
                </StackPanel>
                <Grid Grid.Row="10">
                    <Border  Grid.Column="0" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeHeaderConverter}, ConverterParameter=LightSkyBlue, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,0" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Component Checks" Foreground="White" FontSize="15" FontWeight="Bold" Margin="10,5,5,5"/>
                            <TextBlock Grid.Column="1" Text="Editing component:" Foreground="White" VerticalAlignment="Center" Visibility="{Binding ParentView.ParentView.AdminOptionsToggle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}" />
                            <ComboBox Grid.Column="2" Style="{StaticResource ConstraintComboBoxStyle}" MinWidth="120"
                          Background="{Binding SelectedComponent, Converter={StaticResource UnsetComboColourConverter}}"
                          ItemsSource="{Binding Components, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" SelectedItem="{Binding SelectedComponent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          Visibility="{Binding ParentView.ParentView.AdminOptionsToggle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"
                          DisplayMemberPath="ComponentName"/>
                        </Grid>
                    </Border>
                </Grid>
                <Border Grid.Row="11" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,10,0,10">
                    <TextBlock Text="Prescription" Foreground="White" FontSize="14" Margin="10,5,5,5"/>
                </Border>
                <StackPanel Grid.Row="12" Orientation="Vertical">
                    <TextBlock Grid.Column="0" FontWeight="Bold" Text="Prescription Details" FontSize="13" Margin="5,5,0,5"/>
                    <Border  Background="Black" CornerRadius="1,1,1,1" Height="2" Margin="5,3,10,5" HorizontalAlignment="Stretch"/>
                    <local:TestView DataContext="{Binding Prescription_ViewModel}" TestItems ="{Binding Tests}"  SetReferenceHeader="Reference Value" />
                </StackPanel>
                <Grid Grid.Row="13">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0"  CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,10">
                        <TextBlock Text="Beams" Foreground="White" FontSize="14" Margin="10,5,5,5"/>
                    </Border>
                    <Button x:Name="EditBeamChecks" Grid.Column="1" Style="{DynamicResource ButtonStyle_Medium}" Margin="0,3,0,0" 
                            Visibility="{Binding ParentView.ParentView.AdminOptionsToggle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"
                            Command="{Binding EditBeamChecksCommand}">
                        <Image Source="/Resources/edit.png"></Image>
                    </Button>
                    <Popup PlacementTarget="{Binding ElementName=EditBeamChecks}" Placement="Left"  StaysOpen="False" 
                           AllowsTransparency="True" PopupAnimation="Fade"  IsOpen="{Binding EditBeamChecksVisibility, UpdateSourceTrigger=PropertyChanged}" >
                        <local:EditBeamChecksPopup DataContext="{Binding}"/>
                    </Popup>
                </Grid>
                <local:BeamCheckView Grid.Row="14" DataContext="{Binding Beam_ViewModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" />
                <Border Grid.Row="15" CornerRadius="5,5,5,5" Background="{Binding ParentView.ParentView.AdminOptionsToggle, Converter={StaticResource AdminColorModeConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,15,0,10" Visibility="{Binding ParentView.ParentView.AdminOptionsToggle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}">
                    <TextBlock Text="Imaging" Foreground="White" FontSize="14" Margin="10,5,5,5"/>
                </Border>
                <Grid Grid.Row="16" Visibility="{Binding ParentView.ParentView.AdminOptionsToggle, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}">
                    <local:ImagingControl DataContext="{Binding Imaging_ViewModel}" />
                </Grid>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
